<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admission Form</title>
  <style>
    /* Reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #f0f4ff, #d9e4ff);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      padding: 2rem;
    }

    h1 {
      text-align: center;
      color: #2c3e50;
      margin-bottom: 1.5rem;
      font-weight: 700;
      letter-spacing: 1.2px;
    }

    form {
      background: #ffffff;
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
      width: 100%;
      max-width: 650px;
    }

    label {
      display: block;
      font-weight: 600;
      margin-bottom: 0.4rem;
      color: #34495e;
    }

    input,
    select {
      width: 100%;
      padding: 0.65rem 1rem;
      margin-bottom: 0.3rem;
      border: 2px solid #bdc3c7;
      border-radius: 8px;
      font-size: 1rem;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;
      outline: none;
      background: #f8f9fb;
      color: #2c3e50;
    }

    input:focus,
    select:focus {
      border-color: #2980b9;
      box-shadow: 0 0 8px #2980b9aa;
      background: #ffffff;
    }

    input.error {
      border-color: #e74c3c;
      background: #fdecea;
    }

    .error-msg {
      font-size: 0.9rem;
      color: #e74c3c;
      margin-bottom: 1rem;
      display: none;
    }

    input[readonly] {
      background: #e9ecef;
      cursor: not-allowed;
      border-color: #ced4da;
      color: #6c757d;
    }

    .form-section {
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid #e3e6f0;
    }

    .form-section h3 {
      margin-bottom: 1rem;
      font-weight: 700;
      color: #2c3e50;
    }

    button {
      width: 100%;
      padding: 0.85rem;
      background: linear-gradient(135deg, #2980b9, #6dd5fa);
      border: none;
      border-radius: 10px;
      color: #fff;
      font-size: 1.2rem;
      font-weight: 700;
      cursor: pointer;
      transition: transform 0.2s ease, box-shadow 0.3s ease;
      box-shadow: 0 6px 15px rgba(41, 128, 185, 0.5);
      margin-top: 0.5rem;
    }

    button:hover {
      transform: scale(1.03);
      box-shadow: 0 8px 20px rgba(41, 128, 185, 0.6);
    }

    /* Responsive */
    /* Enhanced Responsive for Phones */
    @media (max-width: 600px) {
      body {
        padding: 1rem;
        align-items: center;
        /* Center form vertically for small screens */
      }

      form {
        padding: 1rem;
        width: 100%;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      }

      h1 {
        font-size: 1.4rem;
        margin-bottom: 1rem;
      }

      label {
        font-size: 0.9rem;
      }

      input,
      select {
        padding: 0.5rem 0.75rem;
        font-size: 0.9rem;
      }

      button {
        padding: 0.7rem;
        font-size: 1rem;
      }

      .form-section h3 {
        font-size: 1rem;
      }
    }
  </style>
</head>

<body>
  <form action="/admission/form" method="POST" onsubmit="return validateForm(event)">
    <h1>Admission Form</h1>

    <label for="name">Full Name</label>
    <input type="text" id="name" name="name" required />
    <div id="name-error" class="error-msg"></div>

    <label for="age">Age</label>
    <input type="number" id="age" name="age" required />
    <div id="age-error" class="error-msg"></div>

    <label for="email">Student's Email</label>
    <input type="email" id="email" name="email" required />
    <div id="email-error" class="error-msg"></div>

    <label for="fname">Father's Name</label>
    <input type="text" id="fname" name="fname" required />
    <div id="fname-error" class="error-msg"></div>

    <label for="mobNumber">Father's Mobile Number</label>
    <input type="tel" id="mobNumber" name="mobNumber" required />
    <div id="mobNumber-error" class="error-msg"></div>

    <label for="mname">Mother's Name</label>
    <input type="text" id="mname" name="mname" required />
    <div id="mname-error" class="error-msg"></div>

    <div class="form-section">
      <h3>Address</h3>

      <label for="vill">Village</label>
      <input type="text" id="vill" name="addv" required />
      <div id="vill-error" class="error-msg"></div>

      <label for="town">Town</label>
      <input type="text" id="town" name="addt" required />
      <div id="town-error" class="error-msg"></div>

      <label for="dist">District</label>
      <input type="text" id="dist" name="addd" value="JAMUI" readonly />

      <label for="state">State</label>
      <input type="text" id="state" name="adds" value="BIHAR" readonly />

      <label for="pincode">Pincode</label>
      <input type="text" id="pincode" name="addp" value="811308" readonly />
    </div>

    <label for="forClass">Class Applying For</label>
    <select id="forClass" name="forClass" required>
      <option value="">-- Select Class --</option>
      <option value="LKG">LKG</option>
      <option value="UKG">UKG</option>
      <option value="NUR">NUR</option>
      <option value="1ST">1ST</option>
      <option value="2ND">2ND</option>
      <option value="3RD">3RD</option>
      <option value="4TH">4TH</option>
      <option value="5TH">5TH</option>
      <option value="6TH">6TH</option>
      <option value="7TH">7TH</option>
      <option value="8TH">8TH</option>
      <option value="9TH">9TH</option>
      <option value="10TH">10TH</option>
    </select>
    <div id="forClass-error" class="error-msg"></div>

    <button type="submit">Submit</button>
  </form>

  <script>
    const regexRules = {
      name: /^[A-Za-z\s]{3,40}$/,        // letters + spaces
      email: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[A-Za-z]{2,}$/, // email
      mobNumber: /^[6-9]\d{9}$/,         // 10 digits starting 6-9
    };

    function validateForm ( event ) {
      let isValid = true;

      // clear previous errors
      document.querySelectorAll( ".error-msg" ).forEach( msg => {
        msg.innerText = '';
        msg.style.display = 'none';
      } );
      document.querySelectorAll( "input, select" ).forEach( inp => inp.classList.remove( "error" ) );

      function showError ( id, msg ) {
        const elem = document.getElementById( id );
        elem.classList.add( 'error' );
        const err = document.getElementById( id + '-error' );
        err.innerText = msg;
        err.style.display = 'block';
        isValid = false;
      }

      // Name validation
      if ( !regexRules.name.test( document.getElementById( 'name' ).value.trim() ) ) {
        showError( 'name', 'Full name must be 3–40 letters.' );
      }
      if ( !regexRules.name.test( document.getElementById( 'fname' ).value.trim() ) ) {
        showError( 'fname', "Father's name must be 3–40 letters." );
      }
      if ( !regexRules.name.test( document.getElementById( 'mname' ).value.trim() ) ) {
        showError( 'mname', "Mother's name must be 3–40 letters." );
      }

      // Age
      const age = Number( document.getElementById( 'age' ).value );
      if ( age < 3 || age > 100 ) showError( 'age', 'Age must be between 3 and 100.' );

      // Email
      const email = document.getElementById( 'email' ).value.trim();
      if ( !regexRules.email.test( email ) ) showError( 'email', 'Enter a valid email address.' );

      // Mobile
      const mob = document.getElementById( 'mobNumber' ).value.trim();
      if ( !regexRules.mobNumber.test( mob ) ) showError( 'mobNumber', 'Mobile must be 10 digits.' );

      // Class
      if ( !document.getElementById( 'forClass' ).value ) showError( 'forClass', 'Please select a class.' );

      if ( !isValid ) event.preventDefault();
      return isValid;
    }
  </script>
</body>

</html>