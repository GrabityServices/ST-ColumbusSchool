<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admission Form</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-color: #4285f4;
      --primary-light: #8ab4f8;
      --bg-color: linear-gradient(140deg, #000000, #00072e);
      --surface-color: #1e1e1e;
      --text-primary: #e8eaed;
      --text-secondary: #b0b0b0;
      --border-color: #333333;
      --error-color: #ea4335;
      --shadow: 0 2px 8px 0 rgba(0, 0, 0, .4), 0 2px 4px 0 rgba(0, 0, 0, .2);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Roboto', sans-serif;
      background: var(--bg-color);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 24px;
      color: var(--text-primary);
    }

    .form-container {
      background: var(--surface-color);
      border-radius: 12px;
      box-shadow: var(--shadow);
      padding: 32px 24px;
      width: 100%;
      max-width: 800px;
    }

    h1 {
      text-align: center;
      color: var(--text-primary);
      font-size: 22px;
      font-weight: 400;
      margin-bottom: 24px;
      letter-spacing: 0.25px;
    }

    .form-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 16px;
      margin-bottom: 16px;
    }

    .form-row.full {
      grid-template-columns: 1fr;
    }

    .form-group {
      margin-bottom: 0;
    }

    label {
      display: block;
      font-size: 13px;
      font-weight: 500;
      color: var(--text-secondary);
      margin-bottom: 6px;
    }

    input,
    select {
      width: 100%;
      padding: 10px 14px;
      border: 1px solid var(--border-color);
      border-radius: 6px;
      font-size: 15px;
      font-family: inherit;
      transition: border-color 0.2s ease;
      outline: none;
      background: #2a2a2a;
      color: var(--text-primary);
    }

    input:focus,
    select:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.2);
      background: #333333;
    }

    input.error,
    select.error {
      border-color: var(--error-color);
      background: #2a2a2a;
    }

    .error-msg {
      font-size: 12px;
      color: var(--error-color);
      margin-top: 4px;
      display: none;
      font-weight: 400;
    }

    input[readonly] {
      background: #1e1e1e;
      color: var(--text-secondary);
      cursor: not-allowed;
    }

    .form-section {
      margin-bottom: 24px;
      padding-top: 20px;
      border-top: 1px solid var(--border-color);
    }

    .form-section h3 {
      font-size: 15px;
      font-weight: 500;
      color: var(--text-primary);
      margin-bottom: 12px;
    }

    .address-grid {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      gap: 12px;
      margin-bottom: 12px;
    }

    .address-grid.full {
      grid-template-columns: 1fr;
    }

    .address-grid .form-group {
      margin-bottom: 12px;
    }

    button {
      width: 100%;
      padding: 10px;
      background: var(--primary-color);
      border: none;
      border-radius: 6px;
      color: #ffffff;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s ease;
      margin-top: 8px;
    }

    button:hover {
      background: var(--primary-light);
    }

    /* Responsive */
    @media (max-width: 768px) {
      body {
        padding: 16px;
      }

      .form-container {
        padding: 24px 16px;
        box-shadow: none;
        border-radius: 0;
      }

      h1 {
        font-size: 20px;
        margin-bottom: 20px;
      }

      .form-row,
      .address-grid {
        grid-template-columns: 1fr;
        gap: 12px;
      }
    }
  </style>
</head>

<body>
  <div class="form-container">
    <form action="/admission/form" method="POST" onsubmit="return validateForm(event)">
      <h1>Admission Form</h1>

      <div class="form-row">
        <div class="form-group">
          <label for="name">Full name</label>
          <input type="text" id="name" name="name" required>
          <div id="name-error" class="error-msg"></div>
        </div>
        <div class="form-group">
          <label for="age">Age</label>
          <input type="number" id="age" name="age" required min="3" max="100">
          <div id="age-error" class="error-msg"></div>
        </div>
      </div>

      <div class="form-row full">
        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" name="email" required>
          <div id="email-error" class="error-msg"></div>
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="fname">Father's name</label>
          <input type="text" id="fname" name="fname" required>
          <div id="fname-error" class="error-msg"></div>
        </div>
        <div class="form-group">
          <label for="mobNumber">Father's phone</label>
          <input type="tel" id="mobNumber" name="mobNumber" required>
          <div id="mobNumber-error" class="error-msg"></div>
        </div>
      </div>

      <div class="form-row full">
        <div class="form-group">
          <label for="mname">Mother's name</label>
          <input type="text" id="mname" name="mname" required>
          <div id="mname-error" class="error-msg"></div>
        </div>
      </div>

      <div class="form-section">
        <h3>Address</h3>
        <div class="form-row">
          <div class="form-group">
            <label for="vill">Village</label>
            <input type="text" id="vill" name="addv" required>
            <div id="vill-error" class="error-msg"></div>
          </div>
          <div class="form-group">
            <label for="town">Town</label>
            <input type="text" id="town" name="addt" required>
            <div id="town-error" class="error-msg"></div>
          </div>
        </div>
        <div class="address-grid">
          <div class="form-group">
            <label for="dist">District</label>
            <input type="text" id="dist" name="addd" value="JAMUI" readonly>
          </div>
          <div class="form-group">
            <label for="state">State</label>
            <input type="text" id="state" name="adds" value="BIHAR" readonly>
          </div>
          <div class="form-group">
            <label for="pincode">Pincode</label>
            <input type="text" id="pincode" name="addp" value="811308" readonly>
          </div>
        </div>
      </div>

      <div class="form-row full">
        <div class="form-group">
          <label for="forClass">Class applying for</label>
          <select id="forClass" name="forClass" required>
            <option value="">Select</option>
            <option value="LKG">LKG</option>
            <option value="UKG">UKG</option>
            <option value="NUR">NUR</option>
            <option value="1ST">1st</option>
            <option value="2ND">2nd</option>
            <option value="3RD">3rd</option>
            <option value="4TH">4th</option>
            <option value="5TH">5th</option>
            <option value="6TH">6th</option>
            <option value="7TH">7th</option>
            <option value="8TH">8th</option>
            <option value="9TH">9th</option>
            <option value="10TH">10th</option>
          </select>
          <div id="forClass-error" class="error-msg"></div>
        </div>
      </div>

      <button type="submit">Create</button>
    </form>
  </div>

  <script>
    const regexRules = {
      name: /^[A-Za-z\s]{3,40}$/,
      email: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[A-Za-z]{2,}$/,
      mobNumber: /^[6-9]\d{9}$/,
    };

    function validateForm(event) {
      let isValid = true;

      document.querySelectorAll('.error-msg').forEach(msg => {
        msg.innerText = '';
        msg.style.display = 'none';
      });
      document.querySelectorAll('input, select').forEach(inp => inp.classList.remove('error'));

      function showError(id, msg) {
        const elem = document.getElementById(id);
        elem.classList.add('error');
        const err = document.getElementById(id + '-error');
        err.innerText = msg;
        err.style.display = 'block';
        isValid = false;
      }

      const name = document.getElementById('name').value.trim();
      if (!regexRules.name.test(name)) showError('name', 'Name must contain 3-40 letters only.');

      const fname = document.getElementById('fname').value.trim();
      if (!regexRules.name.test(fname)) showError('fname', "Father's name must contain 3-40 letters only.");

      const mname = document.getElementById('mname').value.trim();
      if (!regexRules.name.test(mname)) showError('mname', "Mother's name must contain 3-40 letters only.");

      const age = Number(document.getElementById('age').value);
      if (age < 3 || age > 100) showError('age', 'Age must be between 3 and 100.');

      const email = document.getElementById('email').value.trim();
      if (!regexRules.email.test(email)) showError('email', 'Enter a valid email.');

      const mob = document.getElementById('mobNumber').value.trim();
      if (!regexRules.mobNumber.test(mob)) showError('mobNumber', 'Phone must be 10 digits starting with 6-9.');

      const vill = document.getElementById('vill').value.trim();
      if (!vill) showError('vill', 'Village is required.');

      const town = document.getElementById('town').value.trim();
      if (!town) showError('town', 'Town is required.');

      const forClass = document.getElementById('forClass').value;
      if (!forClass) showError('forClass', 'Please select a class.');

      if (!isValid) event.preventDefault();
      return isValid;
    }
  </script>
</body>

</html>