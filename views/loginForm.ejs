<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Login Form</title>
    <style>
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      body {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        font-family: 'poppins', sans-serif;
        background-color: black;
        background-image: radial-gradient(circle at 50% 50%, rgba(1, 1, 51, 0.25) 20%, rgba(0, 0, 0, 0.1) 50%, #000000 100%), linear-gradient(180deg, #0a0a0a 0%, #010133 100%);
      }

      .login-container {
        background: linear-gradient(135deg, rgba(42, 42, 42, 0.8) 0%, rgba(74, 74, 74, 0.6) 100%);
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        max-width: 450px;
        width: 100%;
      }

      .login-container h1 {
        text-align: center;
        margin-bottom: 2rem;
        color: #fff;
      }

      .input-group {
        margin-bottom: 18px;
      }

      .input-group label {
        font-size: 1.1rem;
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #fff;
      }

      .input-group input {
        width: 100%;
        color: #fff;
        padding: 10px 12px;
        border: 1px solid #cccccc69;
        border-radius: 6px;
        font-size: 1rem;
        text-transform: uppercase;
        background-color: #0000004d;
      }

      .input-group input:focus {
        border-color: #4285f4;
        outline: none;
        box-shadow: 0 0 6px rgba(66, 133, 244, 0.4);
      }

      .login-btn {
        width: 100%;
        padding: 12px;
        color: #fff;
        background-color: #4285f4;
        font-size: 16px;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .login-btn:hover {
        background-color: #357ae8;
      }

      .links {
        margin-top: 18px;
        display: flex;
        flex-direction: column;
        gap: 10px;
      }

      .link-btn {
        background: none;
        border: none;
        color: #4285f4;
        cursor: pointer;
        text-align: left;
        font-size: 0.95rem;
        padding: 0;
      }

      .link-btn:hover {
        text-decoration: underline;
      }

      .error-message {
        color: red;
        font-size: 0.9rem;
        margin-top: 5px;
      }

      @media (max-width: 1000px) {
        body {
          min-height: 85vh;
        }

        .login-container {
          padding: 50px 40px;
          max-width: 600px;
        }
      }
    </style>
  </head>
  <body>
    <div class="login-container">
      <h1>Login</h1>
      <form id="loginForm" action="/stcolumbus/admin/manage/login" method="post">
        <div class="input-group">
          <label for="idOrEmail">User ID or Email</label>
          <input type="text" id="idOrEmail" name="idOrEmail" required />
        </div>

        <div class="input-group">
          <label for="password">Password</label>
          <input type="password" id="password" name="password" required />
        </div>

        <button type="submit" class="login-btn">Login</button>

        <div class="links">
          <button type="button" onclick="location.href='/stcolumbus/admin/manage/forgot/pass'" class="link-btn">Forgot Password?</button>
        </div>
      </form>
    </div>

    <script>
      const form = document.getElementById('loginForm');
      const idOrEmail = document.getElementById('idOrEmail');
      const password = document.getElementById('password');

      function showError(input, message) {
        let errorElem = input.nextElementSibling;
        if (!errorElem || !errorElem.classList.contains('error-message')) {
          errorElem = document.createElement('div');
          errorElem.classList.add('error-message');
          input.parentNode.appendChild(errorElem);
        }
        errorElem.innerText = message;
        input.style.borderColor = 'red';
      }

      function clearError(input) {
        let errorElem = input.nextElementSibling;
        if (errorElem && errorElem.classList.contains('error-message')) {
          errorElem.innerText = '';
        }
        input.style.borderColor = '#ccc';
      }

      const regexRules = {
        userId: /^[A-Z0-9]{5}$/, // 5 uppercase letters/digits
        email: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/, // valid email
        password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&]).{8,}$/ // min 8 chars, upper+lower+digit+special
      };

      form.addEventListener('submit', function(e) {
        e.preventDefault();
        let isValid = true;
        const value = idOrEmail.value.trim();

        // Check if input is email or User ID
        if (value.includes('@')) {
          if (!regexRules.email.test(value)) {
            showError(idOrEmail, "Enter a valid email address.");
            isValid = false;
          } else {
            clearError(idOrEmail);
          }
        } else {
          if (!regexRules.userId.test(value)) {
            showError(idOrEmail, "User ID must be exactly 5 characters (uppercase letters or digits).");
            isValid = false;
          } else {
            clearError(idOrEmail);
          }
        }

        // Password validation
        if (!regexRules.password.test(password.value)) {
          showError(password, "Password must be at least 8 characters and include uppercase, lowercase, digit & special character.");
          isValid = false;
        } else {
          clearError(password);
        }

        if (isValid) {
          form.submit();
        }
      });
    </script>
  </body>
</html>
