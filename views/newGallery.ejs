<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Add New Esdfsdfvent</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }

    body {
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background: url(/images/upload-bg-image.png) no-repeat center center/cover;
      padding: 1rem;
    }

    /* ===== Card Wrapper ===== */
    .card {
      background: #fff;
      padding: 2rem;
      border-radius: 16px;
      width: 100%;
      max-width: 500px;
      box-shadow: 0px 6px 18px rgba(0, 0, 0, 0.08);
    }

    .card h1 {
      text-align: center;
      margin-bottom: 1.5rem;
      color: #222;
    }

    /* ===== Upload Box ===== */
    .upload-box {
      margin-top: 1rem;
      padding: 2rem;
      border: 2px dashed #bbb;
      border-radius: 12px;
      text-align: center;
      cursor: pointer;
      background-color: rgba(194, 194, 194, 0.15);
      transition: background 0.3s, border-color 0.3s;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.8rem;
    }

    .upload-box:hover {
      border-color: #007bff;
      background-color: rgba(194, 194, 194, 0.25);
    }

    .upload-box img {
      width: 40px;
      height: 40px;
      opacity: 0.7;
    }

    .upload-box span {
      font-size: 0.95rem;
      color: #555;
    }

    /* Hide default file input */
    .upload-box input[type="file"] {
      display: none;
    }

    /* ===== Additional Input Section ===== */
    .add-event-second-section {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin-top: 1rem;
      width: 100%;
    }

    .add-event-input {
      width: 100%;
      padding: 0.9rem;
      border-radius: 8px;
      border: 1.8px solid rgba(0, 0, 0, 0.35);
      font-size: 1rem;
      outline: none;
      transition: border 0.3s, box-shadow 0.3s;
    }

    .add-event-input:focus,
    .add-event-second-section [type="date"]:focus {
      border-color: #007bff;
      box-shadow: 0 0 6px rgba(0, 123, 255, 0.25);
    }

    .add-event-second-section [type="date"] {
      padding: 0.7rem;
      border-radius: 8px;
      border: 1.8px solid rgba(0, 0, 0, 0.35);
      font-size: 1rem;
    }

    /* ===== Upload Limit Info ===== */
    .upload-limit {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.9rem;
      color: #666;
    }

    .upload-limit-first {
      margin-top: 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.9rem;
      color: #666;
    }

    .upload-limit img {
      width: 18px;
      height: 18px;
      opacity: 0.8;
    }

    /* ===== Submit Button ===== */
    button {
      margin-top: 1.5rem;
      width: 100%;
      padding: 0.9rem;
      border: none;
      border-radius: 12px;
      background: #007bff;
      color: #fff;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.3s, transform 0.1s;
    }

    button:hover {
      background: #0056b3;
    }

    button:active {
      transform: scale(0.98);
    }

    /* ===== Error Message ===== */
    .error-message {
      margin-top: 0.6rem;
      font-size: 0.9rem;
      color: #d9534f;
      font-weight: 500;
      text-align: center;
    }

    @media (max-width: 450px) {
      body {
        padding: 0.5rem;
      }

      .card {
        padding: 1rem;
      }
    }
  </style>
</head>

<body>

  <% if (date && date !=undefined && title && title !=undefined) { %>
    <div class="card">
      <h1>Add New Image</h1>
      <form class="upload-form" enctype="multipart/form-data" action="/home/gallery/new" method="post">
        <label class="upload-box">
          <img src="/images/icons/icon-upload.svg" alt="upload-icon" id="placeholder-img">
          <span id="upload-text">Drag and drop or click to upload</span>
          <input type="file" name="img" accept="image/jpeg, image/png" required />
        </label>

        <input type="text" minlength="3" maxlength="30" name="title" value="<%= title %>" hidden />
        <input type="date" required name="EventDate" value="<%= date %>" hidden />

        <div class="upload-limit-first">
          <img src="/images/icons/icon-info.svg" alt="upload-limit-icon">
          Upload your event image (JPG, JPEG, PNG; max size 5MB)
        </div>
        <button type="submit">Save</button>
        <div class="error-message"></div>
      </form>
    </div>

    <% } else { %>
      <div class="card">
        <h1>Add New Event</h1>
        <form class="upload-form" enctype="multipart/form-data" action="/home/gallery/new" method="post">
          <label class="upload-box">
            <img src="/images/icons/icon-upload.svg" alt="upload-icon">
            <span id="upload-text">Drag and drop or click to upload</span>
            <input type="file" name="img" accept="image/jpeg, image/png" required />
          </label>

          <div class="add-event-second-section">
            <input class="add-event-input" type="text" name="title" placeholder="Enter event title" minlength="3"
              maxlength="30" required />
            <input type="date" required name="EventDate" />

            <div class="upload-limit"><img src="/images/icons/icon-info.svg" alt="upload-limit-icon">Upload your event
              image
              (JPG, JPEG, PNG; max size 5MB)</div>
            <button type="submit">Save</button>
            <div class="error-message"></div>
          </div>

        </form>
      </div>


      <% } %>

        <script>
          const forms = document.querySelectorAll('.upload-form');

          forms.forEach(form => {
            const fileInput = form.querySelector('input[type="file"]');
            const titleInput = form.querySelector('input[name="title"]');
            const dateInput = form.querySelector('input[name="EventDate"]');
            const errorMessage = form.querySelector('.error-message');
            const uploadBox = form.querySelector('.upload-box');
            const uploadText = uploadBox.querySelector('#upload-text');

            // ===== Drag & Drop Handling =====
            uploadBox.addEventListener('dragover', e => {
              e.preventDefault();
              uploadBox.style.backgroundColor = 'rgba(194,194,194,0.25)';
            });

            uploadBox.addEventListener('dragleave', e => {
              e.preventDefault();
              uploadBox.style.backgroundColor = 'rgba(194,194,194,0.15)';
            });

            uploadBox.addEventListener('drop', e => {
              e.preventDefault();
              if (e.dataTransfer.files.length > 0) {
                fileInput.files = e.dataTransfer.files;
                showFileName(fileInput.files[0]);
              }
            });

            // ===== File Selection via Click =====
            fileInput.addEventListener('change', () => {
              showFileName(fileInput.files[0]);
            });

            function showFileName(file) {
              if (!file) return;
              uploadText.textContent = file.name;
            }

            // ===== Unified Validation =====
            form.addEventListener('submit', e => {
              errorMessage.innerText = '';

              // 1️⃣ File validation
              const file = fileInput.files[0];
              const validTypes = ["image/jpeg", "image/png", "image/jpg"];
              const maxSize = 5 * 1024 * 1024; // 5MB

              if (!file) {
                e.preventDefault();
                errorMessage.innerText = 'Please select a file.';
                return;
              }

              if (!validTypes.includes(file.type)) {
                e.preventDefault();
                errorMessage.innerText = 'Only JPG, JPEG, or PNG files are allowed.';
                return;
              }

              if (file.size > maxSize) {
                e.preventDefault();
                errorMessage.innerText = 'File size must not exceed 5MB.';
                return;
              }

              // 2️⃣ Title validation (if input exists)
              if (titleInput) {
                const titleRegex = /^[a-zA-Z ]{3,30}$/;
                if (!titleInput.value || !titleRegex.test(titleInput.value)) {
                  e.preventDefault();
                  errorMessage.innerText = 'Title must be 3–30 characters, only letters or spaces allowed.';
                  return;
                }
              }

              // 3️⃣ Date validation (if input exists)
              if (dateInput && !dateInput.value) {
                e.preventDefault();
                errorMessage.innerText = 'Event date is required.';
                return;
              }
            });
          });
        </script>


</body>

</html>